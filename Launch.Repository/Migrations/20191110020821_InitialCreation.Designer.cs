// <auto-generated />
using System;
using Launch.Repository.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Launch.Repository.Migrations
{
    [DbContext(typeof(LaunchContexto))]
    [Migration("20191110020821_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Launch.Domain.Entidades.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmaSenha")
                        .HasMaxLength(400);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(400);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.HasKey("Id");

                    b.ToTable("Candidato");
                });

            modelBuilder.Entity("Launch.Domain.Entidades.Votacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidatoId");

                    b.Property<DateTime>("DataVotacao");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("Votacao");
                });

            modelBuilder.Entity("Launch.Domain.Entidades.VotacaoDiaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidatoId");

                    b.Property<DateTime>("DataVotacao");

                    b.Property<int>("TotalVotosDia");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("VotacaoDiaria");
                });

            modelBuilder.Entity("Launch.Domain.Entidades.VotacaoSemanal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidatoId");

                    b.Property<int>("NumeroSemana");

                    b.Property<int>("TotalVotosSemana");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("VotacaoSemanal");
                });

            modelBuilder.Entity("Launch.Domain.Entidades.Votacao", b =>
                {
                    b.HasOne("Launch.Domain.Entidades.Candidato", "Candidato")
                        .WithMany("VotosCandidato")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Launch.Domain.Entidades.VotacaoDiaria", b =>
                {
                    b.HasOne("Launch.Domain.Entidades.Candidato", "Candidato")
                        .WithMany("VotosDiarioCandidato")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Launch.Domain.Entidades.VotacaoSemanal", b =>
                {
                    b.HasOne("Launch.Domain.Entidades.Candidato", "Candidato")
                        .WithMany("VotosSemanalCandidato")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
